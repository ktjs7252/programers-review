나의 코드 : 500이 넘는 숫자에 대해 -1을 return 하는 부분에서 먹질 않음

#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int num) {
    int answer = 0;
    while(1)
    {
        if(num%2==0)
        {
            num=num/2;
            answer++;
        }
        else
        {
            num=(num*3)+1;
            answer++;
        }
        if(answer>=500)
        {
            answer=-1;
            return answer;
        }
        
    }
    return answer;
}

다른 사람의 코드
#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>


int solution(int num) {
    int answer = 0;
    while (true)
    {
        if (num == 1)
            return answer;

        if (answer > 500)
            return -1;

        if (num % 2 == 0)
            num = num / 2;
            
        else if(num % 2 == 1)
            num = num * 3 + 1;
        answer++;
    }
}

---------------------------------새로 작성한코드
물론 500을 넘기는 부분에서 요류가 생김
#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int num) {
    int answer = 0;
    int i;
    
    while(num!=1)
    {
        if(answer==500)
        {
           return -1;
        }
        if(num%2==0)
        {
            num=num/2;
           
           
        }
     -------------------------------------------
     int 형은 21억개가 넘어가면 음수로 바뀌는데 음수에선 -1을 홀수로 취급하지 않는다
     그래서longlong 으로 하여 디버깅하여 봤는데 문제가 
     
     
        else if(num%2!=0)
        {
            num=(num*3)+1;
           
        }
        answer++;
    }
    
    
    
    return answer;
}

수정한코드 --- (차이점에 대해 알아보기 : 왜 두것의 결과에 차이가 생기는지 모르겠음)
#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int num) {
    int answer = 0;
    int i;
    
    while(num!=1)
    {
        if(answer==500)
        {
           return -1;
        }
        if(num%2==0)
        {
            num=num/2;
           
        }
        else if(num%2==1)
        {
            num=(num*3)+1;
           
        }
        answer++;
    }
    
    
    
    return answer;
}
